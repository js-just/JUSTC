name: Compile C++ to WASM

on:
  push:
    branches: ["main"]
    tags:
  release:
    types: [published, edited]
  workflow_dispatch:
    inputs:
      dirname:
        description: 'Directory name / Path'
        required: true
        default: 'development'
        type: string

env:
  DEFAULT_DIR: 'development'

permissions:
  contents: read

concurrency:
  group: "wasm"
  cancel-in-progress: false

jobs:
  determine-dirpath:
    runs-on: ubuntu-latest
    outputs:
      dirpath: ${{ steps.set-dirpath.outputs.dirpath }}
    steps:
      - name: Set dirpath for push to main
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        id: set-dirpath-push
        run: echo "dirpath=${{ env.DEFAULT_DIR }}" >> $GITHUB_OUTPUT

      - name: Set dirpath for tags
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        id: set-dirpath-tags
        run: echo "dirpath=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Set dirpath for release
        if: github.event_name == 'release'
        id: set-dirpath-release
        run: echo "dirpath=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT

      - name: Set dirpath for workflow_dispatch
        if: github.event_name == 'workflow_dispatch'
        id: set-dirpath-dispatch
        run: echo "dirpath=${{ github.event.inputs.dirname || env.DEFAULT_DIR }}" >> $GITHUB_OUTPUT

      - name: Set default dirpath
        if: steps.set-dirpath-push.outputs.dirpath == '' && steps.set-dirpath-tags.outputs.dirpath == '' && steps.set-dirpath-release.outputs.dirpath == '' && steps.set-dirpath-dispatch.outputs.dirpath == ''
        id: set-dirpath-default
        run: echo "dirpath=${{ env.DEFAULT_DIR }}" >> $GITHUB_OUTPUT

  compile:
    runs-on: ubuntu-latest
    needs: determine-dirpath
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Move just.config.js file to the root directory
        run: mv javascript/just.config.js just.config.js
      - name: Compress core.js with Just an Ultimate Site Tool
        uses: js-just/_just@main
        with:
          path: javascript
      - name: Cache Emscripten SDK
        uses: actions/cache@v4
        id: emsdk-cache
        with:
          path: |
            ~/emsdk
          key: ${{ runner.os }}-emsdk-${{ hashFiles('**/emsdk/emsdk.py') }}
          restore-keys: |
            ${{ runner.os }}-emsdk-
      - name: Cache Emscripten sysroot and cache
        uses: actions/cache@v4
        id: emscripten-cache
        with:
          path: |
            ~/.cache/emsdk
            /tmp/emscripten_cache
          key: ${{ runner.os }}-emscripten-cache-${{ hashFiles('javascript/compile.sh', 'core/*.cpp', 'core/*.h') }}
          restore-keys: |
            ${{ runner.os }}-emscripten-cache-
      - name: Setup Emscripten
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: latest
          actions-cache-folder: 'emsdk-cache'
      - name: Compile C++ to WASM
        env:
          OUTPUT_DIR: ${{ needs.determine-dirpath.outputs.dirpath }}
        run: bash javascript/compile.sh "${{ needs.determine-dirpath.outputs.dirpath }}"
        id: compile

  test-node:
    runs-on: ubuntu-latest
    needs: compile
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '24.x'
      - name: Test
        run: node javascript_output/${{ needs.compile.outputs.dirpath }}/test.js

  commit:
    runs-on: ubuntu-latest
    needs: compile
    steps:
      - name: Cleanup
        run: rm javascript_output/${{ needs.compile.outputs.dirpath }}/test.js
      - name: Commit
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source-directory: "javascript_output/${{ needs.compile.outputs.dirpath }}"
          destination-github-username: js-just
          destination-repository-name: website
          user-email: "support@juststudio.is-a.dev"
          target-branch: main
          target-directory: "justc/${{ needs.compile.outputs.dirpath }}"
